from django.shortcuts import render
from django.http import HttpResponse
from django.views.decorators.csrf import csrf_exempt
import qrcode
from io import BytesIO
from apps.authentication.models import CustomUser
from django.utils.html import strip_tags


def generate_qr(request):
    data = request.GET.get('data', '')
    
    if not data:
        return HttpResponse('Missing data parameter', status=400)
    
    qr = qrcode.QRCode(
        version=1,
        error_correction=qrcode.constants.ERROR_CORRECT_L,
        box_size=10,
        border=4,
    )
    qr.add_data(data)
    qr.make(fit=True)
    
    img = qr.make_image(fill_color="black", back_color="white")
    
    buffer = BytesIO()
    img.save(buffer, format='PNG')
    buffer.seek(0)
    
    return HttpResponse(buffer.getvalue(), content_type='image/png')

def vcard_qr_page(request):
    """
    Renders the page that displays the user's vCard QR code.
    The QR code image itself is generated by a separate view.
    """
    context = {'current_user': request.user}
    
    # Add trial information if user is authenticated
    if request.user.is_authenticated:
        # Calculate days left on trial
        from datetime import timedelta
        from django.utils import timezone
        
        TRIAL_DURATION_DAYS = 3
        today = timezone.now().date()
        days_since_registration = (today - request.user.date_joined.date()).days
        days_left = max(0, TRIAL_DURATION_DAYS - days_since_registration)
        context['days_left_on_trial'] = days_left
    
    return render(request, 'qrcode_generator/vcard-qr.html', context)

def generate_vcard_qr_image(request, user_id):
    """
    Generates a vCard QR code image for the specified user ID.
    The vCard data is constructed from the user's profile information.
    """
    if not request.user.is_authenticated or request.user.id != user_id:
        return HttpResponse('Forbidden', status=403)

    try:
        user = CustomUser.objects.get(pk=user_id)
    except CustomUser.DoesNotExist:
        return HttpResponse('User not found', status=404)

    # Strip HTML tags from the bio for the vCard NOTE field
    clean_bio = strip_tags(user.bio) if user.bio else ''

    # Construct vCard data (vCard 3.0 format)
    vcard_data = (
        "BEGIN:VCARD\n"
        "VERSION:3.0\n"
        f"N:{user.last_name if user.last_name else ''};{user.first_name if user.first_name else ''};;;\n"
        f"FN:{user.first_name if user.first_name else ''} {user.last_name if user.last_name else ''}\n"
        f"EMAIL;TYPE=INTERNET:{user.email if user.email else ''}\n"
        f"NOTE:{clean_bio}\n"
    )
    if user.website:
        vcard_data += f"URL:{user.website}\n"
    vcard_data += "END:VCARD"

    qr = qrcode.QRCode(
        version=1,
        error_correction=qrcode.constants.ERROR_CORRECT_L,
        box_size=10,
        border=4,
    )
    qr.add_data(vcard_data)
    qr.make(fit=True)

    img = qr.make_image(fill_color="black", back_color="white")

    buffer = BytesIO()
    img.save(buffer, format='PNG')
    buffer.seek(0)

    return HttpResponse(buffer.getvalue(), content_type='image/png')
